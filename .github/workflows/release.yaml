---
jobs:
  gather_data:
    name: Gather data
    permissions:
      contents: read
    secrets: inherit
    uses: techbymatt/tbm-vyos/.github/workflows/data.yaml@main
    with:
      patch_string: ${{ inputs.patch_string }}
  build_container:
    if: |
      inputs.build_container == 'ghcr.io/techbymatt/vyos-build:current' ||
      github.event.schedule
    name: Build container
    needs: [gather_data]
    permissions:
      contents: read
      packages: write
    secrets: inherit
    uses: techbymatt/tbm-vyos/.github/workflows/container.yaml@main
    with:
      vyos_build_pr: ${{ inputs.vyos_build_pr }}
      vyos_build_ref: ${{ needs.gather_data.outputs.vyos_build_commit_sha }}
  build_iso:
    if: |
      !cancelled() && 
      contains(fromJSON('["success", "skipped"]'), needs.build_container.result)
    name: Build ISO
    needs: [gather_data, build_container]
    secrets: inherit
    uses: techbymatt/tbm-vyos/.github/workflows/iso.yaml@main
    with:
      build_container: ${{ inputs.build_container }}
      version: ${{ needs.gather_data.outputs.version }}
      vyos_1x_commit_sha: ${{ needs.gather_data.outputs.vyos_1x_commit_sha }}
      vyos_1x_pr: ${{ inputs.vyos_1x_pr }}
      vyos_build_commit_sha: ${{ needs.gather_data.outputs.vyos_build_commit_sha }}
      vyos_build_pr: ${{ inputs.vyos_build_pr }}
  smoketests_cli:
    container:
      image: ${{ inputs.build_container }}
      options: "--privileged --sysctl net.ipv6.conf.lo.disable_ipv6=0"
    if: |
      !cancelled() && 
      needs.build_iso.result == 'success'
    name: "Smoketests: CLI"
    needs: [gather_data, build_iso]
    outputs:
      exit_code: ${{ steps.smoketests_cli.outputs.exit_code }}
    permissions:
      contents: read
      packages: read
    runs-on: ubuntu-24.04
    steps:
      - id: checkout_vyos_build
        name: Checkout repository vyos/vyos-build
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: ${{ needs.gather_data.outputs.vyos_build_commit_sha }}
          repository: vyos/vyos-build
      - if: inputs.vyos_build_pr != ''
        name: Merge requested PRs from vyos/vyos-build
        run: |
          set -eux
          for pr in $(echo "${{ inputs.vyos_build_pr }}"); do
            title=$(curl -s \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/vyos/vyos-build/pulls/${pr}" | \
              jq -r .title)
            git config user.email "matthew@kobayashi.au"
            git config user.name "MattKobayashi"
            git fetch origin "pull/${pr}/head:pr-${pr}"
            git rebase ${{ needs.gather_data.outputs.vyos_build_commit_sha }} "pr-${pr}"
            git switch --detach ${{ needs.gather_data.outputs.vyos_build_commit_sha }}
            git merge --no-commit "pr-${pr}"
          done
        working-directory: vyos-build
      - id: patch_check_qemu_install
        name: Patch the check-qemu-install script
        run: |
          set -eux
          patch <<'EOF'
          ${{ vars.CHECK_QEMU_INSTALL_PATCH }}
          EOF
        working-directory: scripts
      - id: download_iso
        name: Download the ISO artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: tbm-vyos-${{ needs.gather_data.outputs.version }}-liveimage
          path: build
      - id: smoketests_cli
        name: Run smoketests
        run: |
          set -eux
          sudo make test-no-interfaces-no-vpp
          if [ $? = 0 ]; then
            echo "exit_code=success" >> $GITHUB_OUTPUT
            return 0
          else
            echo "exit_code=fail" >> $GITHUB_OUTPUT
            return 1
          fi
    timeout-minutes: 180
  smoketests_cli_interfaces:
    container:
      image: ${{ inputs.build_container }}
      options: "--privileged --sysctl net.ipv6.conf.lo.disable_ipv6=0"
    if: |
      !cancelled() && 
      needs.build_iso.result == 'success'
    name: "Smoketests: CLI (interfaces)"
    needs: [gather_data, build_iso]
    outputs:
      exit_code: ${{ steps.smoketests_cli_interfaces.outputs.exit_code }}
    permissions:
      contents: read
      packages: read
    runs-on: ubuntu-24.04
    steps:
      - id: checkout_vyos_build
        name: Checkout repository vyos/vyos-build
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: ${{ needs.gather_data.outputs.vyos_build_commit_sha }}
          repository: vyos/vyos-build
      - if: inputs.vyos_build_pr != ''
        name: Merge requested PRs from vyos/vyos-build
        run: |
          set -eux
          for pr in $(echo "${{ inputs.vyos_build_pr }}"); do
            title=$(curl -s \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/vyos/vyos-build/pulls/${pr}" | \
              jq -r .title)
            git config user.email "matthew@kobayashi.au"
            git config user.name "MattKobayashi"
            git fetch origin "pull/${pr}/head:pr-${pr}"
            git rebase ${{ needs.gather_data.outputs.vyos_build_commit_sha }} "pr-${pr}"
            git switch --detach ${{ needs.gather_data.outputs.vyos_build_commit_sha }}
            git merge --no-commit "pr-${pr}"
          done
        working-directory: vyos-build
      - id: patch_check_qemu_install
        name: Patch the check-qemu-install script
        run: |
          set -eux
          patch <<'EOF'
          ${{ vars.CHECK_QEMU_INSTALL_PATCH }}
          EOF
        working-directory: scripts
      - id: download_iso
        name: Download the ISO artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: tbm-vyos-${{ needs.gather_data.outputs.version }}-liveimage
          path: build
      - id: smoketests_cli_interfaces
        name: Run smoketests
        run: |
          set -eux
          sudo make test-interfaces
          if [ $? = 0 ]; then
            echo "exit_code=success" >> $GITHUB_OUTPUT
            return 0
          else
            echo "exit_code=fail" >> $GITHUB_OUTPUT
            return 1
          fi
    timeout-minutes: 180
  smoketests_cli_vpp:
    container:
      image: ${{ inputs.build_container }}
      options: "--privileged --sysctl net.ipv6.conf.lo.disable_ipv6=0"
    if: |
      !cancelled() && 
      needs.build_iso.result == 'success'
    name: "Smoketests: CLI (VPP)"
    needs: [gather_data, build_iso]
    outputs:
      exit_code: ${{ steps.smoketests_cli_vpp.outputs.exit_code }}
    permissions:
      contents: read
      packages: read
    runs-on: ubuntu-24.04
    steps:
      - id: checkout_vyos_build
        name: Checkout repository vyos/vyos-build
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: ${{ needs.gather_data.outputs.vyos_build_commit_sha }}
          repository: vyos/vyos-build
      - if: inputs.vyos_build_pr != ''
        name: Merge requested PRs from vyos/vyos-build
        run: |
          set -eux
          for pr in $(echo "${{ inputs.vyos_build_pr }}"); do
            title=$(curl -s \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/vyos/vyos-build/pulls/${pr}" | \
              jq -r .title)
            git config user.email "matthew@kobayashi.au"
            git config user.name "MattKobayashi"
            git fetch origin "pull/${pr}/head:pr-${pr}"
            git rebase ${{ needs.gather_data.outputs.vyos_build_commit_sha }} "pr-${pr}"
            git switch --detach ${{ needs.gather_data.outputs.vyos_build_commit_sha }}
            git merge --no-commit "pr-${pr}"
          done
        working-directory: vyos-build
      - id: patch_check_qemu_install
        name: Patch the check-qemu-install script
        run: |
          set -eux
          patch <<'EOF'
          ${{ vars.CHECK_QEMU_INSTALL_PATCH }}
          EOF
        working-directory: scripts
      - id: download_iso
        name: Download the ISO artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: tbm-vyos-${{ needs.gather_data.outputs.version }}-liveimage
          path: build
      - id: smoketests_cli_vpp
        name: Run smoketests
        run: |
          set -eux
          sudo make test-vpp
          if [ $? = 0 ]; then
            echo "exit_code=success" >> $GITHUB_OUTPUT
            return 0
          else
            echo "exit_code=fail" >> $GITHUB_OUTPUT
            return 1
          fi
    timeout-minutes: 180
  smoketests_config:
    container:
      image: ${{ inputs.build_container }}
      options: "--privileged --sysctl net.ipv6.conf.lo.disable_ipv6=0"
    if: |
      !cancelled() && 
      needs.build_iso.result == 'success'
    name: "Smoketests: Configuration Load"
    needs: [gather_data, build_iso]
    outputs:
      exit_code: ${{ steps.smoketests_config.outputs.exit_code }}
    permissions:
      contents: read
      packages: read
    runs-on: ubuntu-24.04
    steps:
      - id: checkout_vyos_build
        name: Checkout repository vyos/vyos-build
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: ${{ needs.gather_data.outputs.vyos_build_commit_sha }}
          repository: vyos/vyos-build
      - if: inputs.vyos_build_pr != ''
        name: Merge requested PRs from vyos/vyos-build
        run: |
          set -eux
          for pr in $(echo "${{ inputs.vyos_build_pr }}"); do
            title=$(curl -s \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/vyos/vyos-build/pulls/${pr}" | \
              jq -r .title)
            git config user.email "matthew@kobayashi.au"
            git config user.name "MattKobayashi"
            git fetch origin "pull/${pr}/head:pr-${pr}"
            git rebase ${{ needs.gather_data.outputs.vyos_build_commit_sha }} "pr-${pr}"
            git switch --detach ${{ needs.gather_data.outputs.vyos_build_commit_sha }}
            git merge --no-commit "pr-${pr}"
          done
        working-directory: vyos-build
      - id: patch_check_qemu_install
        name: Patch the check-qemu-install script
        run: |
          set -eux
          patch <<'EOF'
          ${{ vars.CHECK_QEMU_INSTALL_PATCH }}
          EOF
        working-directory: scripts
      - id: download_iso
        name: Download the ISO artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: tbm-vyos-${{ needs.gather_data.outputs.version }}-liveimage
          path: build
      - id: smoketests_config
        name: Run smoketests
        run: |
          set -eux
          sudo make testc
          if [ $? = 0 ]; then
            echo "exit_code=success" >> $GITHUB_OUTPUT
            return 0
          else
            echo "exit_code=fail" >> $GITHUB_OUTPUT
            return 1
          fi
    timeout-minutes: 90
  smoketests_config_vpp:
    container:
      image: ${{ inputs.build_container }}
      options: "--privileged --sysctl net.ipv6.conf.lo.disable_ipv6=0"
    if: |
      !cancelled() && 
      needs.build_iso.result == 'success'
    name: "Smoketests: Configuration Load (VPP)"
    needs: [gather_data, build_iso]
    outputs:
      exit_code: ${{ steps.smoketests_config_vpp.outputs.exit_code }}
    permissions:
      contents: read
      packages: read
    runs-on: ubuntu-24.04
    steps:
      - id: checkout_vyos_build
        name: Checkout repository vyos/vyos-build
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: ${{ needs.gather_data.outputs.vyos_build_commit_sha }}
          repository: vyos/vyos-build
      - if: inputs.vyos_build_pr != ''
        name: Merge requested PRs from vyos/vyos-build
        run: |
          set -eux
          for pr in $(echo "${{ inputs.vyos_build_pr }}"); do
            title=$(curl -s \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/vyos/vyos-build/pulls/${pr}" | \
              jq -r .title)
            git config user.email "matthew@kobayashi.au"
            git config user.name "MattKobayashi"
            git fetch origin "pull/${pr}/head:pr-${pr}"
            git rebase ${{ needs.gather_data.outputs.vyos_build_commit_sha }} "pr-${pr}"
            git switch --detach ${{ needs.gather_data.outputs.vyos_build_commit_sha }}
            git merge --no-commit "pr-${pr}"
          done
        working-directory: vyos-build
      - id: patch_check_qemu_install
        name: Patch the check-qemu-install script
        run: |
          set -eux
          patch <<'EOF'
          ${{ vars.CHECK_QEMU_INSTALL_PATCH }}
          EOF
        working-directory: scripts
      - id: download_iso
        name: Download the ISO artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: tbm-vyos-${{ needs.gather_data.outputs.version }}-liveimage
          path: build
      - id: smoketests_config_vpp
        name: Run smoketests
        run: |
          set -eux
          sudo make testcvpp
          if [ $? = 0 ]; then
            echo "exit_code=success" >> $GITHUB_OUTPUT
            return 0
          else
            echo "exit_code=fail" >> $GITHUB_OUTPUT
            return 1
          fi
    timeout-minutes: 60
  smoketests_raid:
    container:
      image: ${{ inputs.build_container }}
      options: "--privileged --sysctl net.ipv6.conf.lo.disable_ipv6=0"
    if: |
      !cancelled() && 
      needs.build_iso.result == 'success'
    name: "Smoketests: RAID1 Installation"
    needs: [gather_data, build_iso]
    outputs:
      exit_code: ${{ steps.smoketests_raid.outputs.exit_code }}
    permissions:
      contents: read
      packages: read
    runs-on: ubuntu-24.04
    steps:
      - id: checkout_vyos_build
        name: Checkout repository vyos/vyos-build
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: ${{ needs.gather_data.outputs.vyos_build_commit_sha }}
          repository: vyos/vyos-build
      - if: inputs.vyos_build_pr != ''
        name: Merge requested PRs from vyos/vyos-build
        run: |
          set -eux
          for pr in $(echo "${{ inputs.vyos_build_pr }}"); do
            title=$(curl -s \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/vyos/vyos-build/pulls/${pr}" | \
              jq -r .title)
            git config user.email "matthew@kobayashi.au"
            git config user.name "MattKobayashi"
            git fetch origin "pull/${pr}/head:pr-${pr}"
            git rebase ${{ needs.gather_data.outputs.vyos_build_commit_sha }} "pr-${pr}"
            git switch --detach ${{ needs.gather_data.outputs.vyos_build_commit_sha }}
            git merge --no-commit "pr-${pr}"
          done
        working-directory: vyos-build
      - id: patch_check_qemu_install
        name: Patch the check-qemu-install script
        run: |
          set -eux
          patch <<'EOF'
          ${{ vars.CHECK_QEMU_INSTALL_PATCH }}
          EOF
        working-directory: scripts
      - id: download_iso
        name: Download the ISO artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: tbm-vyos-${{ needs.gather_data.outputs.version }}-liveimage
          path: build
      - id: smoketests_raid
        name: Run smoketests
        run: |
          set -eux
          sudo make testraid
          if [ $? = 0 ]; then
            echo "exit_code=success" >> $GITHUB_OUTPUT
            return 0
          else
            echo "exit_code=fail" >> $GITHUB_OUTPUT
            return 1
          fi
    timeout-minutes: 20
  smoketests_secure_boot:
    container:
      image: ${{ inputs.build_container }}
      options: "--privileged --sysctl net.ipv6.conf.lo.disable_ipv6=0"
    if: |
      !cancelled() && 
      needs.build_iso.result == 'success'
    name: "Smoketests: Secure Boot"
    needs: [gather_data, build_iso]
    outputs:
      exit_code: ${{ steps.smoketests_secure_boot.outputs.exit_code }}
    permissions:
      contents: read
      packages: read
    runs-on: ubuntu-24.04
    steps:
      - id: check_kvm
        name: Check KVM support
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get --no-install-recommends --yes install \
            cpu-checker
          sudo kvm-ok
          sudo apt-get --no-install-recommends --yes install \
            cpuid
          if cpuid | grep -q AMD; then
            echo "Nested virtualisation enabled: $(cat /sys/module/kvm_amd/parameters/nested)"
          elif cpuid | grep -q Intel; then
            echo "Nested virtualisation enabled: $(cat /sys/module/kvm_intel/parameters/nested)"
          else
              echo "Unsupported CPU vendor: $(cpuid)" >&2
              exit 1
          fi
      - id: checkout_vyos_build
        name: Checkout repository vyos/vyos-build
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: ${{ needs.gather_data.outputs.vyos_build_commit_sha }}
          repository: vyos/vyos-build
      - if: inputs.vyos_build_pr != ''
        name: Merge requested PRs from vyos/vyos-build
        run: |
          set -eux
          for pr in $(echo "${{ inputs.vyos_build_pr }}"); do
            title=$(curl -s \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/vyos/vyos-build/pulls/${pr}" | \
              jq -r .title)
            git config user.email "matthew@kobayashi.au"
            git config user.name "MattKobayashi"
            git fetch origin "pull/${pr}/head:pr-${pr}"
            git rebase ${{ needs.gather_data.outputs.vyos_build_commit_sha }} "pr-${pr}"
            git switch --detach ${{ needs.gather_data.outputs.vyos_build_commit_sha }}
            git merge --no-commit "pr-${pr}"
          done
        working-directory: vyos-build
      - id: patch_check_qemu_install
        name: Patch the check-qemu-install script
        run: |
          set -eux
          patch <<'EOF'
          ${{ vars.CHECK_QEMU_INSTALL_PATCH }}
          EOF
        working-directory: scripts
      - id: download_iso
        name: Download the ISO artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: tbm-vyos-${{ needs.gather_data.outputs.version }}-liveimage
          path: build
      - id: smoketests_secure_boot
        if: |
          steps.check_kvm.outcome == 'success'
        name: Run smoketests
        run: |
          set -eux
          sudo make testsb
          if [ $? = 0 ]; then
            echo "exit_code=success" >> $GITHUB_OUTPUT
          else
            echo "exit_code=fail" >> $GITHUB_OUTPUT
          fi
  smoketests_tpm:
    container:
      image: ${{ inputs.build_container }}
      options: "--privileged --sysctl net.ipv6.conf.lo.disable_ipv6=0"
    if: |
      !cancelled() && 
      needs.build_iso.result == 'success'
    name: "Smoketests: TPM Encryption"
    needs: [gather_data, build_iso]
    outputs:
      exit_code: ${{ steps.smoketests_tpm.outputs.exit_code }}
    permissions:
      contents: read
      packages: read
    runs-on: ubuntu-24.04
    steps:
      - id: checkout_vyos_build
        name: Checkout repository vyos/vyos-build
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: ${{ needs.gather_data.outputs.vyos_build_commit_sha }}
          repository: vyos/vyos-build
      - if: inputs.vyos_build_pr != ''
        name: Merge requested PRs from vyos/vyos-build
        run: |
          set -eux
          for pr in $(echo "${{ inputs.vyos_build_pr }}"); do
            title=$(curl -s \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/vyos/vyos-build/pulls/${pr}" | \
              jq -r .title)
            git config user.email "matthew@kobayashi.au"
            git config user.name "MattKobayashi"
            git fetch origin "pull/${pr}/head:pr-${pr}"
            git rebase ${{ needs.gather_data.outputs.vyos_build_commit_sha }} "pr-${pr}"
            git switch --detach ${{ needs.gather_data.outputs.vyos_build_commit_sha }}
            git merge --no-commit "pr-${pr}"
          done
        working-directory: vyos-build
      - id: patch_check_qemu_install
        name: Patch the check-qemu-install script
        run: |
          set -eux
          patch <<'EOF'
          ${{ vars.CHECK_QEMU_INSTALL_PATCH }}
          EOF
        working-directory: scripts
      - id: download_iso
        name: Download the ISO artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: tbm-vyos-${{ needs.gather_data.outputs.version }}-liveimage
          path: build
      - id: smoketests_tpm
        name: Run smoketests
        run: |
          set -eux
          sudo make testtpm
          if [ $? = 0 ]; then
            echo "exit_code=success" >> $GITHUB_OUTPUT
            return 0
          else
            echo "exit_code=fail" >> $GITHUB_OUTPUT
            return 1
          fi
    timeout-minutes: 20
  draft_release:
    if: |
      !cancelled() &&
      needs.build_iso.result == 'success' &&
      needs.smoketests_cli.result == 'success' &&
      needs.smoketests_cli_interfaces.result == 'success' &&
      needs.smoketests_cli_vpp.result == 'success' &&
      needs.smoketests_config.result == 'success' &&
      needs.smoketests_config_vpp.result == 'success' &&
      needs.smoketests_raid.result == 'success' &&
      needs.smoketests_secure_boot.result == 'success' &&
      needs.smoketests_tpm.result == 'success'
    name: Draft release
    needs:
      [
        gather_data,
        build_iso,
        smoketests_cli,
        smoketests_cli_interfaces,
        smoketests_cli_vpp,
        smoketests_config,
        smoketests_config_vpp,
        smoketests_raid,
        smoketests_secure_boot,
        smoketests_tpm
      ]
    outputs:
      release_url: ${{ steps.draft_release.outputs.html_url }}
    permissions:
      contents: write
    runs-on: ubuntu-24.04
    steps:
      - id: download_artifact
        name: Download live image artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: tbm-vyos-${{ needs.gather_data.outputs.version }}-liveimage
          path: build
      - id: rename_artifact
        name: Rename live image artifact
        run: |
          set -eux
          mv live-image-*.hybrid.iso ${{ needs.build_iso.outputs.release_filename }}
        working-directory: build
      - id: sign_release
        name: Sign release image
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install minisign
          mkdir -p ~/.minisign
          echo "${{ secrets.MINISIGN_SECRET }}" > ~/.minisign/minisign.key
          echo "${{ secrets.MINISIGN_PUB }}" > minisign.pub
          echo | minisign -Sm ${{ needs.build_iso.outputs.release_filename }}
        working-directory: build
      - id: draft_release
        name: Create draft release
        uses: ncipollo/release-action@440c8c1cb0ed28b9f43e4d1d670870f059653174 # v1.16.0
        with:
          allowUpdates: false
          artifactContentType: application/x-iso9660-image
          artifactErrorsFailBuild: true
          artifacts: "build/tbm-vyos-*.iso, build/tbm-vyos-*.iso.minisig"
          body: |
            ### Build Log
            https://github.com/techbymatt/tbm-vyos/actions/runs/${{ github.run_id }}

            ### Smoketest Results
            * CLI: ${{ needs.smoketests_cli.outputs.exit_code == 'success' && '✅ passed' || '❌ failed' }}
            * CLI (interfaces): ${{ needs.smoketests_cli_interfaces.outputs.exit_code == 'success' && '✅ passed' || '❌ failed' }}
            * CLI (VPP): ${{ needs.smoketests_cli_vpp.outputs.exit_code == 'success' && '✅ passed' || '❌ failed' }}
            * Configuration Load: ${{ needs.smoketests_config.outputs.exit_code == 'success' && '✅ passed' || '❌ failed' }}
            * Configuration Load (VPP): ${{ needs.smoketests_config_vpp.outputs.exit_code == 'success' && '✅ passed' || '❌ failed' }}
            * RAID1 Installation: ${{ needs.smoketests_raid.outputs.exit_code == 'success' && '✅ passed' || '❌ failed' }}
            * RAID1 Installation: ${{ needs.smoketests_secure_boot.outputs.exit_code == 'success' && '✅ passed' || '❌ failed' }}
            * TPM Encryption: ${{ needs.smoketests_tpm.outputs.exit_code == 'success' && '✅ passed' || '❌ failed' }}

            ### Upstream Comparison
            Latest included `vyos-build` commit: https://github.com/vyos/vyos-build/commit/${{ needs.gather_data.outputs.vyos_build_commit }}
            Commits to `vyos-build` since this build: https://github.com/vyos/vyos-build/compare/${{ needs.gather_data.outputs.vyos_build_commit }}...current

            Latest included `vyos-1x` commit: https://github.com/vyos/vyos-1x/commit/${{ needs.gather_data.outputs.vyos_1x_commit }}
            Commits to `vyos-1x` since this build: https://github.com/vyos/vyos-1x/compare/${{ needs.gather_data.outputs.vyos_1x_commit }}...current
          draft: true
          name: TBM VyOS ${{ needs.gather_data.outputs.version }}
          omitDraftDuringUpdate: true
          tag: ${{ needs.gather_data.outputs.version }}
  notify_release:
    if: |
      !cancelled() &&
      needs.draft_release.result == 'success'
    name: Release notifications
    needs: [draft_release]
    permissions:
      contents: read
    runs-on: ubuntu-24.04
    steps:
      - id: pushover
        name: Pushover
        run: |
          curl -s \
            --form-string "token=${{ secrets.PO_APP_TOKEN }}" \
            --form-string "user=${{ secrets.PO_USER_KEY }}" \
            --form-string "message=A new draft release has been created!" \
            --form-string "url=${{ needs.draft_release.outputs.release_url }}" \
            https://api.pushover.net/1/messages.json
name: Release
on:
  workflow_dispatch:
    inputs:
      build_container:
        default: "ghcr.io/techbymatt/vyos-build:current"
        description: "Build container to use?"
        options:
          - "vyos/vyos-build:current"
          - "ghcr.io/techbymatt/vyos-build:current"
        required: true
        type: choice
      patch_string:
        description: "Patch version? (leave blank for none)"
        required: false
        type: string
      vyos_1x_pr:
        description: "List of upstream vyos-1x PR IDs to merge (optional)"
        required: false
        type: string
      vyos_build_pr:
        description: "List of upstream vyos-build PR IDs to merge (optional)"
        required: false
        type: string
  schedule:
    - cron: "0 3 1 * *"
