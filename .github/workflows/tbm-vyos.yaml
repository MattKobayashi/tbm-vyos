---
name: TBM VyOS Automated Builds

on:
  workflow_dispatch:
    inputs:
      patch-string:
        description: Patch version? (leave blank for none)
        required: false
        type: string
  schedule:
    - cron: "0 0 1 * *"

jobs:
  create-runners:
    strategy:
      matrix:
        runner-tag:
          [
            build-iso,
            smoketests-no-interfaces,
            smoketests-interfaces-only,
            smoketests-config-load,
            smoketests-raid-install,
            smoketests-tpm-encryption,
            draft-release,
          ]
    name: Create runner
    runs-on: ubuntu-24.04
    steps:
      - name: Create runner
        uses: MattKobayashi/tailscale-qemu-runner-action@v1.7.0
        with:
          gh-api-token: ${{ secrets.GH_API_TOKEN }}
          gha-runner-apt-mirror: http://mirror.overthewire.com.au/ubuntu/
          gha-runner-labels: ${{ matrix.runner-tag }}
          gha-runner-mem: 10G
          gha-runner-tz: Australia/Brisbane
          ssh-host: 100.102.37.118
          ssh-user: matthew
          ts-oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          ts-oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          ts-tag: ci
  build-iso:
    container:
      image: vyos/vyos-build:current
      options: "--privileged --sysctl net.ipv6.conf.lo.disable_ipv6=0"
    defaults:
      run:
        shell: bash
    name: Build ISO
    outputs:
      version: ${{ env.VERSION }}
      vyos-build-commit: ${{ env.VYOS_BUILD_COMMIT }}
      vyos-build-commit-sha: ${{ env.VYOS_BUILD_COMMIT_SHA }}
      vyos-1x-commit: ${{ env.VYOS_1X_COMMIT }}
      vyos-1x-commit-sha: ${{ env.VYOS_1X_COMMIT_SHA }}
    permissions:
      contents: write
      packages: read
    runs-on: build-iso
    steps:
      - id: remount-workdir
        name: Remount the work directory
        run: |
          set -ex
          mount -i -o remount,exec,dev /__w/
      - id: date-format
        name: Run `date` and format
        run: |
          set -ex
          echo "VERSION=$(date +'%Y%m')" >> "$GITHUB_ENV"
      - id: patch-string
        if: ${{ inputs.patch-string != '' }}
        name: Add patch string
        run: |
          set -ex
          echo "VERSION=$VERSION-${{ inputs.patch-string }}" >> "$GITHUB_ENV"
      - name: "Fetch the `vyos-build` repository"
        uses: actions/checkout@v4.2.2
        with:
          path: vyos-build
          ref: current
          repository: vyos/vyos-build
      - name: Get last `vyos-build` commit
        run: |
          set -ex
          echo "VYOS_BUILD_COMMIT=$(git --no-pager log --pretty=format:%h --max-count=1)" >> "$GITHUB_ENV"
        working-directory: vyos-build
      - name: Get last `vyos-build` commit (full SHA)
        run: |
          set -ex
          echo "VYOS_BUILD_COMMIT_SHA=$(git --no-pager log --pretty=format:%H --max-count=1)" >> "$GITHUB_ENV"
        working-directory: vyos-build
      - name: "Fetch the `vyos-1x` repository"
        uses: actions/checkout@v4.2.2
        with:
          path: packages/vyos-1x
          ref: current
          repository: vyos/vyos-1x
      - name: Get last `vyos-1x` commit
        run: |
          set -ex
          echo "VYOS_1X_COMMIT=$(git --no-pager log --pretty=format:%h --max-count=1)" >> "$GITHUB_ENV"
        working-directory: packages/vyos-1x
      - name: Get last `vyos-1x` commit (full SHA)
        run: |
          set -ex
          echo "VYOS_1X_COMMIT_SHA=$(git --no-pager log --pretty=format:%H --max-count=1)" >> "$GITHUB_ENV"
        working-directory: packages/vyos-1x
      - name: Build vyos-1x package
        run: |
          set -ex
          cd packages/vyos-1x; dpkg-buildpackage -uc -us -tc -b
      - id: change-os-release
        name: Change the value of `os-release`
        run: |
          set -ex
          sed -i 's/NAME="VyOS"/NAME="TBM VyOS"/' scripts/image-build/build-vyos-image
        working-directory: vyos-build
      - id: build-iso
        name: Build the VyOS ISO
        run: |
          set -ex
          sudo make clean
          sudo --preserve-env ./build-vyos-image \
            --architecture amd64 \
            --build-by 'tbm-vyos@tech.bymatt.au' \
            --build-comment 'Please direct all support queries to support@tech.bymatt.au' \
            --build-type release \
            --version ${{ env.VERSION }} \
            --custom-apt-entry 'deb http://deb.debian.org/debian bookworm non-free-firmware' \
            --custom-apt-entry 'deb http://deb.debian.org/debian-security bookworm-security non-free-firmware' \
            --custom-apt-entry 'deb http://deb.debian.org/debian bookworm-updates non-free-firmware' \
            --custom-package intel-microcode \
            --custom-package amd64-microcode \
            --custom-package vyos-1x-smoketest \
            generic
        working-directory: vyos-build
      - id: upload-live-image-iso
        name: Upload live image artifact
        uses: actions/upload-artifact@v4.4.3
        with:
          name: tbm-vyos-${{ env.VERSION }}-liveimage
          path: vyos-build/build/live-image-amd64.hybrid.iso
      - id: upload-release-iso
        name: Upload release ISO artifact
        uses: actions/upload-artifact@v4.4.3
        with:
          name: tbm-vyos-${{ env.VERSION }}-release
          path: vyos-build/build/vyos-*.iso
    timeout-minutes: 45
  smoketests-no-interfaces:
    container:
      image: vyos/vyos-build:current
      options: "--privileged --sysctl net.ipv6.conf.lo.disable_ipv6=0"
    name: "Smoketests: CLI (no interfaces)"
    needs: [build-iso]
    outputs:
      exit_code: ${{ steps.smoketests-no-interfaces.outputs.exit_code }}
    runs-on: smoketests-no-interfaces
    steps:
      - name: "Fetch the `vyos-build` repository"
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{ needs.build-iso.outputs.vyos-build-commit-sha }}
          repository: vyos/vyos-build
      - id: download-iso
        name: Download the ISO artifact
        uses: actions/download-artifact@v4.1.8
        with:
          name: tbm-vyos-${{ needs.build-iso.outputs.version }}-liveimage
          path: build
      - id: smoketests-no-interfaces
        name: Run smoketests
        run: |
          set -ex
          sudo make test-no-interfaces
          if [ $? = 0 ]; then
            echo "exit_code=success" >> $GITHUB_OUTPUT
          else
            echo "exit_code=fail" >> $GITHUB_OUTPUT
          fi
    timeout-minutes: 180
  smoketests-interfaces-only:
    container:
      image: vyos/vyos-build:current
      options: "--privileged --sysctl net.ipv6.conf.lo.disable_ipv6=0"
    name: "Smoketests: CLI (interfaces only)"
    needs: [build-iso]
    outputs:
      exit_code: ${{ steps.smoketests-interfaces-only.outputs.exit_code }}
    runs-on: smoketests-interfaces-only
    steps:
      - name: "Fetch the `vyos-build` repository"
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{ needs.build-iso.outputs.vyos-build-commit-sha }}
          repository: vyos/vyos-build
      - id: download-iso
        name: Download the ISO artifact
        uses: actions/download-artifact@v4.1.8
        with:
          name: tbm-vyos-${{ needs.build-iso.outputs.version }}-liveimage
          path: build
      - id: smoketests-interfaces-only
        name: Run smoketests
        run: |
          set -ex
          sudo make test-interfaces
          if [ $? = 0 ]; then
            echo "exit_code=success" >> $GITHUB_OUTPUT
          else
            echo "exit_code=fail" >> $GITHUB_OUTPUT
          fi
    timeout-minutes: 180
  smoketests-config-load:
    container:
      image: vyos/vyos-build:current
      options: "--privileged --sysctl net.ipv6.conf.lo.disable_ipv6=0"
    name: "Smoketests: Configuration load"
    needs: [build-iso]
    outputs:
      exit_code: ${{ steps.smoketests-config-load.outputs.exit_code }}
    runs-on: smoketests-config-load
    steps:
      - name: "Fetch the `vyos-build` repository"
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{ needs.build-iso.outputs.vyos-build-commit-sha }}
          repository: vyos/vyos-build
      - id: download-iso
        name: Download the ISO artifact
        uses: actions/download-artifact@v4.1.8
        with:
          name: tbm-vyos-${{ needs.build-iso.outputs.version }}-liveimage
          path: build
      - id: smoketests-config-load
        name: Run smoketests
        run: |
          set -ex
          sudo make testc
          if [ $? = 0 ]; then
            echo "exit_code=success" >> $GITHUB_OUTPUT
          else
            echo "exit_code=fail" >> $GITHUB_OUTPUT
          fi
    timeout-minutes: 90
  smoketests-raid-install:
    container:
      image: vyos/vyos-build:current
      options: "--privileged --sysctl net.ipv6.conf.lo.disable_ipv6=0"
    name: "Smoketests: RAID1 installation"
    needs: [build-iso]
    outputs:
      exit_code: ${{ steps.smoketests-raid-install.outputs.exit_code }}
    runs-on: smoketests-raid-install
    steps:
      - name: "Fetch the `vyos-build` repository"
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{ needs.build-iso.outputs.vyos-build-commit-sha }}
          repository: vyos/vyos-build
      - id: download-iso
        name: Download the ISO artifact
        uses: actions/download-artifact@v4.1.8
        with:
          name: tbm-vyos-${{ needs.build-iso.outputs.version }}-liveimage
          path: build
      - id: smoketests-raid-install
        name: Run smoketests
        run: |
          set -ex
          sudo make testraid
          if [ $? = 0 ]; then
            echo "exit_code=success" >> $GITHUB_OUTPUT
          else
            echo "exit_code=fail" >> $GITHUB_OUTPUT
          fi
    timeout-minutes: 20
  smoketests-tpm-encryption:
    container:
      image: vyos/vyos-build:current
      options: "--privileged --sysctl net.ipv6.conf.lo.disable_ipv6=0"
    name: "Smoketests: TPM encryption"
    needs: [build-iso]
    outputs:
      exit_code: ${{ steps.smoketests-tpm-encryption.outputs.exit_code }}
    runs-on: smoketests-tpm-encryption
    steps:
      - name: "Fetch the `vyos-build` repository"
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{ needs.build-iso.outputs.vyos-build-commit-sha }}
          repository: vyos/vyos-build
      - id: download-iso
        name: Download the ISO artifact
        uses: actions/download-artifact@v4.1.8
        with:
          name: tbm-vyos-${{ needs.build-iso.outputs.version }}-liveimage
          path: build
      - id: smoketests-tpm-encryption
        name: Run smoketests
        run: |
          set -ex
          sudo make testtpm
          if [ $? = 0 ]; then
            echo "exit_code=success" >> $GITHUB_OUTPUT
          else
            echo "exit_code=fail" >> $GITHUB_OUTPUT
          fi
    timeout-minutes: 20
  draft-release:
    if: ${{ !cancelled() }}
    name: Create a new draft release
    needs:
      [
        build-iso,
        smoketests-no-interfaces,
        smoketests-interfaces-only,
        smoketests-config-load,
        smoketests-raid-install,
        smoketests-tpm-encryption,
      ]
    runs-on: draft-release
    steps:
      - id: download-iso
        name: Download the ISO artifact
        uses: actions/download-artifact@v4.1.8
        with:
          name: tbm-vyos-${{ needs.build-iso.outputs.version }}-release
          path: build
      - id: rename-iso
        name: Rename the VyOS ISO
        run: |
          set -ex
          ORIG_NAME=$(ls vyos-*.iso)
          mv $ORIG_NAME tbm-$ORIG_NAME
        working-directory: build
      - id: draft-release
        name: Create a new draft release
        uses: ncipollo/release-action@v1.14.0
        with:
          allowUpdates: false
          artifactContentType: application/x-iso9660-image
          artifactErrorsFailBuild: true
          artifacts: "build/tbm-vyos-*.iso"
          body: |
            Build log: https://github.com/MattKobayashi/tbm-vyos/actions/runs/${{ github.run_id }}

            * CLI Smoketests (no interfaces) ${{ needs.smoketests-no-interfaces.outputs.exit_code == 'success' && '✅ passed' || '❌ failed' }}
            * CLI Smoketests (interfaces only) ${{ needs.smoketests-interfaces-only.outputs.exit_code == 'success' && '✅ passed' || '❌ failed' }}
            * Config tests ${{ needs.smoketests-config-load.outputs.exit_code == 'success' && '✅ passed' || '❌ failed' }}
            * RAID1 tests ${{ needs.smoketests-raid-install.outputs.exit_code == 'success' && '✅ passed' || '❌ failed' }}
            * TPM tests ${{ needs.smoketests-tpm-encryption.outputs.exit_code == 'success' && '✅ passed' || '❌ failed' }}

            Latest included `vyos-build` commit: https://github.com/vyos/vyos-build/commit/${{ needs.build-iso.outputs.vyos-build-commit }}
            Commits to `vyos-build` since this build: https://github.com/vyos/vyos-build/compare/${{ needs.build-iso.outputs.vyos-build-commit }}...current

            Latest included `vyos-1x` commit: https://github.com/vyos/vyos-1x/commit/${{ needs.build-iso.outputs.vyos-1x-commit }}
            Commits to `vyos-1x` since this build: https://github.com/vyos/vyos-1x/compare/${{ needs.build-iso.outputs.vyos-1x-commit }}...current
          draft: true
          name: TBM VyOS ${{ needs.build-iso.outputs.version }}
          omitDraftDuringUpdate: true
          tag: ${{ needs.build-iso.outputs.version }}
